name: Build and Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_IMAGE_NAME }}:latest
            ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # .env.production 파일 생성
            cat > .env.production << EOF
            SPRING_PROFILES_ACTIVE=prod
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            DB_URL=jdbc:oracle:thin:@dinkdb_medium?TNS_ADMIN=/app/wallet
            DOCKER_IMAGE_NAME=${{ secrets.DOCKER_IMAGE_NAME }}
            EOF

            # docker-compose.yml 파일 생성/업데이트
            cat > docker-compose.yml << 'EOF'
            version: '3.8'

            services:
              auth-backend:
                image: ${DOCKER_IMAGE_NAME:-kwon3011/auth-backend:latest}
                container_name: auth-backend
                ports:
                  - "8080:8080"
                environment:
                  - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
                  - DB_USERNAME=${DB_USERNAME}
                  - DB_PASSWORD=${DB_PASSWORD}
                  - DB_URL=${DB_URL}
                  - JWT_SECRET_KEY=${JWT_SECRET_KEY}
                volumes:
                  - ./app/wallet:/app/wallet:ro
                restart: unless-stopped
                healthcheck:
                  test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
                  interval: 30s
                  timeout: 10s
                  retries: 3
                  start_period: 40s
            EOF

            # Docker Compose로 서비스 재시작
            sudo docker-compose --env-file .env.production down || true
            sudo docker-compose --env-file .env.production pull
            sudo docker-compose --env-file .env.production up -d

            # 이전 이미지 정리
            sudo docker image prune -f
